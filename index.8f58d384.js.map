{"mappings":"ACAA,6BAA6B,E,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,G,E,I,A,W,M,A,U,wI,G,CAG7B,IAAM,EAAO,SAAS,aAAa,CAAC,SAC9B,EAAO,SAAS,aAAa,CAAC,SAE9B,EAAW,SAAS,gBAAgB,CAAC,MACrC,EAAY,EAAG,EAAK,gBAAgB,CAAC,OAE3C,EAAK,gBAAgB,CAAC,QAAS,SAAA,CAA/B,EACE,IAAM,EAAe,EAAI,GAAU,OAAO,CAAC,EAAE,MAAM,EAEnD,OAAQ,GACN,KAAK,EACL,KAAK,EACH,EAAS,IAAI,CAAC,SAAC,CAAA,CAAG,CAAlB,EACE,IAAM,EAAQ,EAAE,QAAQ,CAAC,EAAa,CAAC,WAAW,CAC5C,EAAQ,EAAE,QAAQ,CAAC,EAAa,CAAC,WAAW,CAElD,OAAO,EAAM,aAAa,CAAC,EAC7B,GACA,KACF,MAAK,EACH,EAAS,IAAI,CAAC,SAAC,CAAA,CAAG,CAAlB,EACE,OAAA,EAAE,QAAQ,CAAC,EAAa,CAAC,WAAW,CAClC,EAAE,QAAQ,CAAC,EAAa,CAAC,WAAW,A,GAExC,KAEF,MAAK,EACH,EAAS,IAAI,CAAC,SAAC,CAAA,CAAG,CAAlB,EAME,OAAO,AALM,EAAE,QAAQ,CAAC,EAAa,CAClC,WAAW,CAAC,OAAO,CAAC,UAAW,IACrB,EAAE,QAAQ,CAAC,EAAa,CAClC,WAAW,CAAC,OAAO,CAAC,UAAW,GAGpC,EAMJ,CAEA,EAAS,OAAO,CAAC,SAAA,CAAjB,EACE,EAAK,MAAM,CAAC,EACd,EACF,E,4D","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["/* eslint-disable no-console */ \"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar head = document.querySelector(\"thead\");\nvar body = document.querySelector(\"tbody\");\nvar headRows = document.querySelectorAll(\"th\");\nvar bodyRows = _to_consumable_array(body.querySelectorAll(\"tr\"));\nhead.addEventListener(\"click\", function(e) {\n    var currentIndex = _to_consumable_array(headRows).indexOf(e.target);\n    switch(currentIndex){\n        case 0:\n        case 1:\n            bodyRows.sort(function(a, b) {\n                var name1 = a.children[currentIndex].textContent;\n                var name2 = b.children[currentIndex].textContent;\n                return name1.localeCompare(name2);\n            });\n            break;\n        case 2:\n            bodyRows.sort(function(a, b) {\n                return a.children[currentIndex].textContent - b.children[currentIndex].textContent;\n            });\n            break;\n        case 3:\n            bodyRows.sort(function(a, b) {\n                var num1 = a.children[currentIndex].textContent.replace(/[^0-9]/g, \"\");\n                var num2 = b.children[currentIndex].textContent.replace(/[^0-9]/g, \"\");\n                return num1 - num2;\n            });\n            break;\n        default:\n            break;\n    }\n    bodyRows.forEach(function(el) {\n        body.append(el);\n    });\n});\n\n//# sourceMappingURL=index.8f58d384.js.map\n","/* eslint-disable no-console */\n'use strict';\n\nconst head = document.querySelector('thead');\nconst body = document.querySelector('tbody');\n\nconst headRows = document.querySelectorAll('th');\nconst bodyRows = [...body.querySelectorAll('tr')];\n\nhead.addEventListener('click', e => {\n  const currentIndex = [...headRows].indexOf(e.target);\n\n  switch (currentIndex) {\n    case 0:\n    case 1:\n      bodyRows.sort((a, b) => {\n        const name1 = a.children[currentIndex].textContent;\n        const name2 = b.children[currentIndex].textContent;\n\n        return name1.localeCompare(name2);\n      });\n      break;\n    case 2:\n      bodyRows.sort((a, b) =>\n        a.children[currentIndex].textContent\n        - b.children[currentIndex].textContent);\n\n      break;\n\n    case 3:\n      bodyRows.sort((a, b) => {\n        const num1 = a.children[currentIndex]\n          .textContent.replace(/[^0-9]/g, '');\n        const num2 = b.children[currentIndex]\n          .textContent.replace(/[^0-9]/g, '');\n\n        return num1 - num2;\n      });\n\n      break;\n\n    default:\n      break;\n  }\n\n  bodyRows.forEach(el => {\n    body.append(el);\n  });\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","head","document","querySelector","body","headRows","querySelectorAll","bodyRows","addEventListener","e","currentIndex","indexOf","target","sort","a","b","name1","children","textContent","name2","localeCompare","num1","replace","forEach","el","append"],"version":3,"file":"index.8f58d384.js.map"}